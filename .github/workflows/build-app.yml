name: Build Mobile App

on:
  repository_dispatch:
    types: [build_mobile_app]
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - '.gitignore'

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  build:
    name: Build Mobile App
    runs-on: ubuntu-22.04
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    - name: 📋 Display build configuration
      run: |
        echo "🔧 Build Configuration:"
        echo "  Build ID: ${{ github.event.client_payload.build_id || 'test-build' }}"
        echo "  App Name: ${{ github.event.client_payload.app_name || 'TestApp' }}"
        echo "  Package Name: ${{ github.event.client_payload.package_name || 'com.test.app' }}"
        echo "  Platform: ${{ github.event.client_payload.platform || 'android' }}"
        echo "  Build Type: ${{ github.event.client_payload.build_type || 'apk' }}"
        echo "  Base URL: ${{ github.event.client_payload.base_url || github.event.client_payload.app_url || 'https://test.com' }}"
        echo "  Version Name: ${{ github.event.client_payload.version_name || '1.0.0' }}"
        echo "  Version Code: ${{ github.event.client_payload.version_code || '1' }}"
        echo "  Build Number: ${{ github.event.client_payload.build_number || github.event.client_payload.version_code || '1' }}"
        echo "  Event: ${{ github.event_name }}"
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    # Android 전용 설정
    - name: ☕ Setup JDK (Android)
      if: github.event.client_payload.platform == 'android' || github.event_name == 'push'
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
    
    - name: 🤖 Setup Android SDK (Android)
      if: github.event.client_payload.platform == 'android' || github.event_name == 'push'
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        ndk: 25.1.8937393
    
    # iOS 전용 설정
    - name: 🍎 Setup Xcode (iOS)
      if: github.event.client_payload.platform == 'ios'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: 🍎 Setup CocoaPods (iOS)
      if: github.event.client_payload.platform == 'ios'
      uses: maxim-lobanov/setup-cocoapods@v1
      with:
        version: latest
    
    # 공통 의존성 설치
    - name: 📦 Install dependencies
      run: |
        npm install
        # Sharp 이미지 처리용 (아이콘 생성)
        npm install sharp
    
    # 앱 설정 구성
    - name: 🔧 Configure app settings
      env:
        BUILD_ID: ${{ github.event.client_payload.build_id || 'test-build' }}
        APP_NAME: ${{ github.event.client_payload.app_name || 'TestApp' }}
        PACKAGE_NAME: ${{ github.event.client_payload.package_name || 'com.test.app' }}
        PLATFORM: ${{ github.event.client_payload.platform || 'android' }}
        BASE_URL: ${{ github.event.client_payload.base_url || github.event.client_payload.app_url || 'https://withcookie.com' }}
        APP_ICON_URL: ${{ github.event.client_payload.app_icon_url }}
        FIREBASE_CONFIG_URL: ${{ github.event.client_payload.firebase_config_url }}
        KEYSTORE_URL: ${{ github.event.client_payload.keystore_url }}
        KEYSTORE_PASSWORD: ${{ github.event.client_payload.keystore_password }}
        KEY_ALIAS: ${{ github.event.client_payload.key_alias }}
        KEY_PASSWORD: ${{ github.event.client_payload.key_password }}
        BUILD_TYPE: ${{ github.event.client_payload.build_type || 'apk' }}
        VERSION_CODE: ${{ github.event.client_payload.version_code || '1' }}
        VERSION_NAME: ${{ github.event.client_payload.version_name || '1.0.0' }}
        BUILD_NUMBER: ${{ github.event.client_payload.build_number || github.event.client_payload.version_code || '1' }}
        MARKETING_VERSION: ${{ github.event.client_payload.marketing_version || github.event.client_payload.version_name || '1.0.0' }}
      run: |
        node scripts/configure-app.js
    
    # Android 빌드
    - name: 🤖 Build Android App
      if: github.event.client_payload.platform == 'android' || github.event_name == 'push'
      env:
        BUILD_TYPE: ${{ github.event.client_payload.build_type || 'apk' }}
        BUILD_MODE: release
        APP_NAME: ${{ github.event.client_payload.app_name || 'TestApp' }}
        PACKAGE_NAME: ${{ github.event.client_payload.package_name || 'com.test.app' }}
        VERSION_CODE: ${{ github.event.client_payload.version_code || '1' }}
        VERSION_NAME: ${{ github.event.client_payload.version_name || '1.0.0' }}
        KEYSTORE_URL: ${{ github.event.client_payload.keystore_url }}
        KEYSTORE_PASSWORD: ${{ github.event.client_payload.keystore_password }}
      run: |
        chmod +x scripts/build-android.sh
        scripts/build-android.sh
    
    # iOS 빌드
    - name: 🍎 Build iOS App
      if: github.event.client_payload.platform == 'ios'
      env:
        BUILD_MODE: release
        APP_NAME: ${{ github.event.client_payload.app_name }}
        PACKAGE_NAME: ${{ github.event.client_payload.package_name }}
        BUILD_NUMBER: ${{ github.event.client_payload.build_number || github.event.client_payload.version_code || '1' }}
        MARKETING_VERSION: ${{ github.event.client_payload.marketing_version || github.event.client_payload.version_name || '1.0.0' }}
      run: |
        chmod +x scripts/build-ios.sh
        scripts/build-ios.sh
    
    # 빌드 결과물 업로드 준비
    - name: 📦 Prepare build artifacts
      id: prepare-artifacts
      run: |
        if [ "${{ github.event.client_payload.platform || 'android' }}" = "android" ]; then
          if [ "${{ github.event.client_payload.build_type }}" = "aab" ]; then
            BUILD_FILE=$(find android/app/build/outputs/bundle -name "*.aab" | head -1)
          else
            BUILD_FILE=$(find android/app/build/outputs/apk/release -name "*.apk" | head -1)
          fi
        else
          BUILD_FILE=$(find ios/build -name "*.ipa" | head -1)
        fi
        
        if [ -f "$BUILD_FILE" ]; then
          echo "build_file=$BUILD_FILE" >> $GITHUB_OUTPUT
          echo "✅ Build file found: $BUILD_FILE"
          ls -la "$BUILD_FILE"
        else
          echo "❌ Build file not found"
          exit 1
        fi
    
    # S3 업로드 (냉장고 API 사용)
    - name: ☁️ Upload to S3
      env:
        BUILD_ID: ${{ github.event.client_payload.build_id }}
        PLATFORM: ${{ github.event.client_payload.platform }}
        BUILD_TYPE: ${{ github.event.client_payload.build_type }}
        S3_UPLOAD_URL: ${{ github.event.client_payload.s3_upload_url }}
        BUILD_FILE: ${{ steps.prepare-artifacts.outputs.build_file }}
        REFRIGERATOR_UNLIMITED_KEY: ${{ secrets.REFRIGERATOR_UNLIMITED_KEY || 'UNLIMITED2024' }}
      run: |
        if [ -f "$BUILD_FILE" ]; then
          node scripts/upload-to-s3.js
        else
          echo "❌ No build file to upload"
          exit 1
        fi
    
    # 빌드 결과 알림
    - name: 📬 Notify build completion
      if: always()
      env:
        BUILD_ID: ${{ github.event.client_payload.build_id }}
        PLATFORM: ${{ github.event.client_payload.platform }}
        BUILD_TYPE: ${{ github.event.client_payload.build_type }}
        S3_UPLOAD_URL: ${{ github.event.client_payload.s3_upload_url }}
        BUILD_STATUS: ${{ job.status }}
      run: |
        NOTIFICATION_PAYLOAD=$(cat <<EOF
        {
          "build_id": "$BUILD_ID",
          "platform": "$PLATFORM",
          "build_type": "$BUILD_TYPE",
          "status": "$BUILD_STATUS",
          "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "github_run_id": "${{ github.run_id }}",
          "github_run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }
        EOF
        )
        
        if [ -n "$S3_UPLOAD_URL" ]; then
          echo "📬 Sending build completion notification..."
          curl -X POST "$S3_UPLOAD_URL" \
            -H "Content-Type: application/json" \
            -d "$NOTIFICATION_PAYLOAD" \
            || echo "⚠️ Failed to send notification"
        else
          echo "⚠️ No notification URL provided"
        fi
        
        echo "✅ Build process completed with status: $BUILD_STATUS"
    
    # 아티팩트 저장 (디버그용)
    - name: 📁 Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ github.event.client_payload.platform }}-${{ github.event.client_payload.build_id }}
        path: |
          android/app/build/outputs/**/*.apk
          android/app/build/outputs/**/*.aab
          ios/build/*.ipa
        if-no-files-found: ignore
        retention-days: 7